version: '3.8'

services:
  # Redis for session management and Celery broker
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Main FastAPI application
  fc-trading-api:
    build: .
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      - DEBUG=false
      - WORKERS=4
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Celery worker for background tasks
  celery-worker:
    build: .
    restart: unless-stopped
    command: celery -A app.telegram.tasks.celery_app worker --loglevel=info --concurrency=4
    environment:
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "celery", "-A", "app.telegram.tasks.celery_app", "inspect", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Celery beat scheduler
  celery-beat:
    build: .
    restart: unless-stopped
    command: celery -A app.telegram.tasks.celery_app beat --loglevel=info
    environment:
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - celery_beat:/app/celerybeat-schedule
    depends_on:
      redis:
        condition: service_healthy

  # Nginx reverse proxy
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    depends_on:
      fc-trading-api:
        condition: service_healthy

  # Monitoring with Flower (Celery monitoring)
  flower:
    build: .
    restart: unless-stopped
    command: celery -A app.telegram.tasks.celery_app flower --port=5555
    ports:
      - "5555:5555"
    environment:
      - REDIS_URL=redis://redis:6379
    env_file:
      - .env
    depends_on:
      redis:
        condition: service_healthy

volumes:
  redis_data:
    driver: local
  celery_beat:
    driver: local
  nginx_logs:
    driver: local

networks:
  default:
    driver: bridge
